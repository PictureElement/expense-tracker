{"version":3,"sources":["components/Header.js","context/Store.js","components/Balance.js","components/Income.js","components/Expense.js","components/Item.js","components/Empty.js","components/List.js","components/Modal.js","components/App.js","index.js"],"names":["Header","props","theme","useTheme","colorMode","useContext","ColorModeContext","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","IconButton","mx","onClick","toggleColorMode","color","palette","mode","aria-label","initialState","transactions","Context","createContext","Store","children","useState","state","setState","Provider","value","Balance","balance","map","item","type","Math","abs","amount","reduce","previousAmount","currentAmount","Card","display","flexDirection","justifyContent","height","mb","p","overflow","typography","whiteSpace","textOverflow","toFixed","Income","income","filter","Expense","expense","Item","px","py","alignItems","borderLeft","borderLeftColor","flex","description","e","transaction","id","Empty","Alert","mt","severity","AlertTitle","List","items","emptyTemplate","listTemplate","my","fontWeight","Stack","aria-labelledby","spacing","pl","m","length","Modal","open","onClose","fullScreen","useMediaQuery","breakpoints","down","setType","setAmount","setDescription","handleClose","Dialog","onSubmit","preventDefault","DialogTitle","DialogContent","FormControl","FormLabel","RadioGroup","row","name","onChange","target","FormControlLabel","control","Radio","label","TextField","required","Number","InputProps","min","step","startAdornment","InputAdornment","fullWidth","DialogActions","Button","ModalDemo","React","setOpen","Fab","bottom","left","transform","App","Container","maxWidth","marginBottom","Grid","container","xs","sm","ToggleColorMode","setMode","useEffect","localStorage","getItem","setItem","useMemo","prevMode","createTheme","background","default","grey","responsiveFontSizes","factor","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6504d800.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useContext } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nfunction Header(props) {\r\n  const theme = useTheme();\r\n  const colorMode = useContext(props.ColorModeContext);\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Expense Tracker\r\n          </Typography>\r\n          <IconButton sx={{ mx: 1 }} onClick={colorMode.toggleColorMode} color=\"inherit\">\r\n            {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\r\n          </IconButton>\r\n          <IconButton aria-label=\"log out\" color=\"inherit\">\r\n              <LogoutIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { createContext, useState } from 'react';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  transactions: []\r\n}\r\n\r\n// const initialState = {\r\n//   transactions: [\r\n//     { id: 4, type: 'expense', amount: 550.50, description: 'Camera' },\r\n//     { id: 3, type: 'income', amount: 1800.00, description: 'Salary' },\r\n//     { id: 2, type: 'expense', amount: 7, description: 'Cinema ticket' },\r\n//     { id: 1, type: 'income', amount: 1000000, description: 'Winning the Lottery' }\r\n//   ]\r\n// }\r\n\r\n// Create context object\r\nexport const Context = createContext();\r\n\r\n// Component to wrap our application and provide the state\r\nconst Store = ({ children }) => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  return (\r\n    // Every Context object comes with a Provider React component\r\n    <Context.Provider value={[state, setState]}>{children}</Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Store;","import React, { useContext } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport { Context } from '../context/Store';\r\n\r\nfunction Balance() {\r\n  const [state, setState] = useContext(Context);\r\n\r\n  const amounts = state.transactions.map(item => {\r\n    // Add sign\r\n    if (item.type === 'expense') {\r\n      return -Math.abs(item.amount);\r\n    } else {\r\n      return item.amount;\r\n    }\r\n  });\r\n\r\n  // balance is of Number type\r\n  const balance = amounts.reduce(((previousAmount, currentAmount) => previousAmount + currentAmount), 0);\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        mb: 2,\r\n        p: 2,\r\n        overflow: 'hidden'\r\n      }}\r\n    >\r\n      <Box sx={{ color: 'text.secondary', typography: 'overline' }}>BALANCE</Box>\r\n      {/* Convert balance to a positive number using Math.abs() */}\r\n      {/* Use toFixed() to format and convert it to a string for visual representation */}\r\n      <Box sx={{ typography: 'h4', whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' }}>{balance < 0 ? '−' : '+'} € {Math.abs(balance).toFixed(2)}</Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import React, { useContext } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport { Context } from '../context/Store';\r\n\r\nfunction Income() {\r\n  const [state, setState] = useContext(Context);\r\n\r\n  const incomeItems = state.transactions.filter(item => item.type === 'income');\r\n\r\n  const incomeAmounts = incomeItems.map(({amount}) => amount);\r\n\r\n  // income is of Number type\r\n  const income = incomeAmounts.reduce(((previousAmount, currentAmount) => previousAmount + currentAmount), 0);\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        p: 2,\r\n        overflow: 'hidden'\r\n      }}\r\n    >\r\n      <Box sx={{ color: 'text.secondary', typography: 'overline' }}>INCOME</Box>\r\n      {/* Use toFixed() to format and convert income to a string for visual representation */}\r\n      <Box sx={{ color: 'success.main', typography: 'h6', whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' }}>+ € {income.toFixed(2)}</Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Income\r\n","import React, { useContext } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport { Context } from '../context/Store';\r\n\r\nfunction Expense() {\r\n  const [state, setState] = useContext(Context);\r\n\r\n  const expenseItems = state.transactions.filter(item => item.type === 'expense');\r\n\r\n  const expenseAmounts = expenseItems.map(({amount}) => amount);\r\n\r\n  // expense is of Number type\r\n  const expense = expenseAmounts.reduce(((previousAmount, currentAmount) => previousAmount + currentAmount), 0);\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        p: 2,\r\n        overflow: 'hidden'\r\n      }}\r\n    >\r\n      <Box sx={{ color: 'text.secondary', typography: 'overline' }}>EXPENSE</Box>\r\n      {/* Use toFixed() to format and convert expense to a string for visual representation */}\r\n      <Box sx={{ color: 'error.main', typography: 'h6', whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' }}>− € {expense.toFixed(2)}</Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Expense\r\n","import React, { useContext } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Context } from '../context/Store';\r\n\r\nfunction Item({ item }) {\r\n  const [state, setState] = useContext(Context);\r\n\r\n  const handleDeleteClick = (e) => {\r\n    // Delete transaction\r\n    // Use ... spread syntax to expand state object and override its existing property (i.e. transactions)\r\n    setState({\r\n      ...state,\r\n      transactions: state.transactions.filter(transaction => transaction.id !== item.id )\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      component=\"li\"\r\n      sx={{\r\n        typography: 'body1',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden',\r\n        px: 2,\r\n        py: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        borderLeft: '4px solid',\r\n        borderLeftColor: item.type === 'income' ? 'success.main' : 'error.main'\r\n      }}\r\n    >\r\n      <Box sx={{ flex: '1 1 0', whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' }}>{item.description}</Box>\r\n\r\n      <Box sx={{ flex: '1 1 0', display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\r\n        <Box sx={{ mx: 1, whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n          {/* Use toFixed() to format and convert amount to a string for visual representation */}\r\n          {item.type === 'income' ? '+' : '−'} € {item.amount.toFixed(2)}\r\n        </Box>\r\n        <IconButton onClick={handleDeleteClick} aria-label=\"delete\">\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nfunction Empty() {\r\n  return (\r\n    <Alert sx={{ mt: 2 }} variant=\"filled\" severity=\"info\">\r\n      <AlertTitle>No transactions yet</AlertTitle>\r\n      Add your transactions and keep an accurate record of your money inflow and outflow.\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Empty\r\n","import React, { useContext } from 'react';\r\nimport { Context } from '../context/Store';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Item from './Item';\r\nimport Empty from './Empty';\r\n\r\nfunction List() {\r\n  const [state, setState] = useContext(Context);\r\n  \r\n  const items = state.transactions.map(item => (\r\n    <Item item={item} key={item.id} />\r\n  ));\r\n\r\n  const emptyTemplate = (<Empty />);\r\n\r\n  const listTemplate = (\r\n    <div>\r\n      <Typography id=\"recent-transactions-heading\" variant=\"h6\" component=\"h2\" sx={{ my: 2, fontWeight: 'light' }}>Recent transactions</Typography>\r\n      <Stack component=\"ul\" aria-labelledby=\"recent-transactions-heading\" spacing={2} sx={{pl:0, m:0}}>\r\n        {items}\r\n      </Stack>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    state.transactions.length > 0 ? listTemplate : emptyTemplate\r\n  )\r\n}\r\n\r\nexport default List\r\n","import React, { useState, useContext } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Button from '@mui/material/Button';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport { Context } from '../context/Store';\r\n\r\nfunction Modal(props) {\r\n\r\n  const { open, onClose } = props;\r\n\r\n  const [state, setState] = useContext(Context);\r\n\r\n  // For theme toggler\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  // State\r\n  const [type, setType] = useState('expense');\r\n  const [amount, setAmount] = useState();\r\n  const [description, setDescription] = useState('');\r\n\r\n  // Callbacks\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleTypeChange = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    // String to Number type\r\n    setAmount(Number(e.target.value));\r\n  };\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Add transaction\r\n    // Use ... spread syntax to create a new array using state array as part of it\r\n    setState({\r\n      ...state,\r\n      transactions: [{ id: state.transactions.length + 1, type, amount, description }, ...state.transactions]\r\n    });\r\n\r\n    // Close modal\r\n    onClose();\r\n\r\n    // Reset component state\r\n    setType('expense');\r\n    setAmount();\r\n    setDescription('');\r\n  };\r\n\r\n  return (\r\n    <Dialog fullScreen={fullScreen} open={open} onClose={handleClose}>\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogTitle>New transaction</DialogTitle>\r\n        <DialogContent>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Type</FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"transaction type\"\r\n              name=\"type\"\r\n              value={type}\r\n              onChange={handleTypeChange}\r\n            >\r\n              <FormControlLabel value=\"expense\" control={<Radio />} label=\"Expense\" />\r\n              <FormControlLabel value=\"income\" control={<Radio />} label=\"Income\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            id=\"amount\"\r\n            required\r\n            sx={{ my: 2 }}\r\n            value={amount}\r\n            onChange={handleAmountChange}\r\n            InputProps={{ min: \"0\", step: \"0.01\", startAdornment: <InputAdornment position=\"start\">€</InputAdornment> }} \r\n            fullWidth\r\n            label=\"Amount\"\r\n            type=\"number\"\r\n          />\r\n\r\n          <TextField\r\n            id=\"description\"\r\n            required\r\n            value={description}\r\n            onChange={handleDescriptionChange}\r\n            fullWidth\r\n            label=\"Description\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button type=\"submit\">Save</Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default function ModalDemo() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n      />\r\n      <Fab onClick={handleOpen} sx={{ position: 'fixed', bottom: '16px', left: '50%', transform: 'translateX(-50%)'}} color=\"secondary\" aria-label=\"New transaction\">\r\n        <AddIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import * as React from 'react';\nimport { createContext, useMemo, useState, useEffect } from 'react';\nimport './App.css';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Header from './Header';\nimport { ThemeProvider, createTheme, responsiveFontSizes } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { grey } from '@mui/material/colors';\nimport Balance from './Balance';\nimport Income from './Income';\nimport Expense from './Expense';\nimport List from './List';\nimport Modal from './Modal';\nimport Store from '../context/Store';\n\nconst ColorModeContext = createContext({ toggleColorMode: () => {} });\n\nfunction App() {\n  return (\n    <Store>\n      \n      <Header ColorModeContext={ColorModeContext} />\n\n      <Container maxWidth=\"sm\" sx={{ mt: 2, marginBottom: '88px' }}>\n\n        <Typography id=\"overview-heading\" variant=\"h6\" component=\"h2\" sx={{ my: 2, fontWeight: 'light' }}>Overview</Typography>\n\n        <Balance />\n\n        <Grid aria-labelledby=\"overview-heading\" container spacing={2}>\n\n          <Grid item xs={6} sm={6}>\n            <Income />\n          </Grid>\n          <Grid item xs={6} sm={6}>\n            <Expense />\n          </Grid>\n        </Grid>\n        \n        <List />\n        \n      </Container>\n\n      <Modal />\n\n    </Store>\n  );\n}\n\nexport default function ToggleColorMode() {\n  // Theme mode state\n  const [mode, setMode] = useState();\n\n  useEffect(() => {\n    if (localStorage.getItem('theme')) {\n      setMode(localStorage.getItem('theme'));\n    } else {\n      localStorage.setItem('theme', 'light');\n      setMode('light');\n    }\n  }, []);\n\n  const colorMode = useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => {\n          if (prevMode === 'light') {\n            localStorage.setItem('theme', 'dark');\n            return 'dark';\n          } else {\n            localStorage.setItem('theme', 'light');\n            return 'light';\n          }\n        });\n      },\n    }),\n    [],\n  );\n\n  let theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n          ...(mode === 'light'\n            ? {\n                // palette values for light mode\n                background: {\n                  default: grey[50]\n                }\n              }\n            : {\n                // palette values for dark mode\n              }),\n        }\n      }),\n    [mode],\n  );\n\n  theme = responsiveFontSizes(theme, {factor: 1});\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}